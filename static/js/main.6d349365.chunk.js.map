{"version":3,"sources":["components/NavBar/NavBar.jsx","pages/Intro/Intro.js","components/SpecialtyCard/SpecialtyCard.jsx","data/LanguagesData.js","pages/About/About.js","data/ProjectsData.js","components/ProjectsCard/ProjectsCard.jsx","pages/Projects/Projects.js","components/Panda/Panda.jsx","pages/Contact/Contact.js","pages/Main/Main.js","pages/utilities.js","pages/OneProject/OneProject.js","components/Footer/Footer.jsx","pages/App/App.js","serviceWorker.js","index.js"],"names":["NavBar","_ref","theme","toggleNightMode","React","createElement","className","href","src","alt","Scrollspy","items","currentClassName","offset","aria-label","onClick","Intro","cannotUseWebp","id","style","backgroundImage","concat","SpecialtyCard","data","map","lang","idx","key","icon","name","languagesData","About","projectsData","image","imageWebp","url","git","description","difficulties","technologies","ProjectsCard","project","Link","to","Projects","Panda","isVisible","Contact","message","setMessage","useState","email","msg","handleChange","evt","_objectSpread","target","value","handleSubmit","preventDefault","templateParams","user_name","user_email","to_name","process","message_html","emailjs","send","TrackVisibility","onSubmit","htmlFor","type","onChange","rows","cols","Main","nightMode","setSrc","isChrome","isFirefox","checkBrowser","userAgent","navigator","includes","myImg","useMemo","imageToLoad","Image","onload","OneProject","props","ProjectsData","match","params","useEffect","window","scrollTo","Fragment","rel","Footer","App","setNightMode","Switch","Route","exact","path","render","Object","assign","Boolean","location","hostname","ReactDOM","Router","component","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.6d349365.chunk.js","sourcesContent":["import React from \"react\";\nimport Scrollspy from \"react-scrollspy\";\nimport \"./NavBar.css\";\n\nconst NavBar = ({theme, toggleNightMode}) => {\n    return (\n        <nav className=\"nav\">\n            <a href=\"#intro\" className=\"nav__logo--link\">\n                {theme === false ? (\n                    <img\n                        src={process.env.PUBLIC_URL + '/images/Logo-black.png'}\n                        alt=\"logo\"\n                        className=\"nav__logo\"\n                    />\n                ) : (\n                    <img\n                        src={process.env.PUBLIC_URL + '/images/Logo-white.png'}\n                        alt=\"logo\"\n                        className=\"nav__logo\"\n                    />\n                )}\n            </a>\n            <Scrollspy\n                items={[\"home\", \"about\", \"projects\", \"contact\"]}\n                currentClassName=\"is-current\"\n                offset={0}\n                className=\"nav__list\"\n            >\n                <li className=\"nav__item\"></li>\n                <li className=\"nav__item\">\n                    <a href=\"#about\" className=\"nav__link\">\n                        <span>About</span>\n                    </a>\n                </li>\n                <li className=\"nav__item\">\n                    <a href=\"#projects\" className=\"nav__link\">\n                        <span>Projects</span>\n                    </a>\n                </li>\n                <li className=\"nav__item\">\n                    <a href=\"#contact\" className=\"nav__link\">\n                        <span>Contact</span>\n                    </a>\n                </li>\n            </Scrollspy>\n            <button className=\"nav__theme\" aria-label=\"theme changer\">\n                {theme === false ? (\n                    <i\n                        className=\"fas fa-moon\"\n                        onClick={toggleNightMode}\n                    ></i>\n                ) : (\n                    <i\n                        className=\"fas fa-sun\"\n                        onClick={toggleNightMode}\n                    ></i>\n                )}\n            </button>\n        </nav>\n    );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./Intro.css\";\n\nconst Intro = ({ src, cannotUseWebp }) => {\n\n    return (<div className=\"intro\" id=\"intro\" style={ { backgroundImage: `url(${src})` } }>\n        <div className=\"intro__container\">\n            <div className=\"intro__titles\">\n                <h1 className=\"intro__title--first\">Suzy</h1>\n                <h1 className=\"intro__title--last\">Nakayama</h1>\n                <h2 className=\"intro__subtitle\">\n                    &lt; Full-Stack Developer &gt;\n                    </h2>\n            </div>\n            { cannotUseWebp ?\n                (\n                    <img src={process.env.PUBLIC_URL + '/images/suzy.jpg'} alt=\"suzy\" className=\"intro__img\" />\n                ) : (\n                    <img src={process.env.PUBLIC_URL + '/images/suzy.webp'} alt=\"suzy\" className=\"intro__img\" />\n                )\n            }\n        </div>\n    </div>\n    );\n}\n\nexport default Intro;\n","import React from \"react\";\nimport \"./SpecialtyCard.css\";\n\nexport default function SpecialtyCard({data}) {\n    return (\n        <div className=\"specialty-card__container\">\n            {data.map((lang, idx) => {\n                return (\n                    <div key={idx} className=\"specialty-card__each\">\n                        {lang.icon}\n                        <p>{lang.name}</p>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n","import React from \"react\";\n\nlet languagesData = [\n  [\n    {\n      name: \"HTML5\",\n      icon: <img src={process.env.PUBLIC_URL + \"/icons/html.svg\"} alt=\"html\" className=\"lang__icon\" />,\n    },\n    {\n      name: \"CSS3\",\n      icon: <img src={process.env.PUBLIC_URL + \"/icons/css.svg\"} alt=\"css\" className=\"lang__icon\" />,\n    },\n    {\n      name: \"Bootstrap\",\n      icon: (\n        <img\n          src={process.env.PUBLIC_URL + \"/icons/bootstrap.svg\"}\n          alt=\"bootstrap\"\n          className=\"lang__icon\"\n        />\n      ),\n    },\n    {\n      name: \"Sass\",\n      icon: <img src={process.env.PUBLIC_URL + \"/icons/sass.svg\"} alt=\"sass\" className=\"lang__icon\" />,\n    },\n    {\n      name: \"TailwindCSS\",\n      icon: (\n        <img\n          src={process.env.PUBLIC_URL + \"/icons/tailwindcss.svg\"}\n          alt=\"tailwindcss\"\n          className=\"lang__icon\"\n        />\n      ),\n    },\n    {\n      name: \"JavaScript\",\n      icon: (\n        <img\n          src={process.env.PUBLIC_URL + \"/icons/javascript.svg\"}\n          alt=\"javascript\"\n          className=\"lang__icon\"\n        />\n      ),\n    },\n    {\n      name: \"Typescript\",\n      icon: (\n        <img\n          src={process.env.PUBLIC_URL + \"/icons/typescript.svg\"}\n          alt=\"typescript\"\n          className=\"lang__icon\"\n        />\n      ),\n    },\n    {\n      name: \"jQuery\",\n      icon: <img src={process.env.PUBLIC_URL + \"/icons/jquery.svg\"} alt=\"jquery\" className=\"lang__icon\" />,\n    },\n    {\n      name: \"React\",\n      icon: <img src={process.env.PUBLIC_URL + \"/icons/react.svg\"} alt=\"react\" className=\"lang__icon\" />,\n    },\n    {\n      name: \"Node.js\",\n      icon: <img src={process.env.PUBLIC_URL + \"/icons/node.svg\"} alt=\"node\" className=\"lang__icon\" />,\n    },\n    {\n      name: \"Express\",\n      icon: (\n        <img src={process.env.PUBLIC_URL + \"/icons/express.svg\"} alt=\"express\" className=\"lang__icon\" />\n      ),\n    },\n    {\n      name: \"MongoDb\",\n      icon: <img src={process.env.PUBLIC_URL + \"/icons/mongo.svg\"} alt=\"mongo\" className=\"lang__icon\" />,\n    },\n    {\n      name: \"Jest\",\n      icon: <img src={process.env.PUBLIC_URL + \"/icons/jest.svg\"} alt=\"jest\" className=\"lang__icon\" />,\n    },\n    {\n      name: \"Heroku\",\n      icon: <img src={process.env.PUBLIC_URL + \"/icons/heroku.svg\"} alt=\"heroku\" className=\"lang__icon\" />,\n    },\n    {\n      name: \"Git\",\n      icon: <img src={process.env.PUBLIC_URL + \"/icons/git.svg\"} alt=\"git\" className=\"lang__icon\" />,\n    },\n    {\n      name: \"Styled-Components\",\n      icon: (\n        <img\n          src={process.env.PUBLIC_URL + \"/icons/styled-components.png\"}\n          alt=\"styled-components\"\n          className=\"lang__icon\"\n        />\n      ),\n    },\n  ],\n  [\n    {\n      name: \"Python\",\n      icon: <img src={process.env.PUBLIC_URL + \"/icons/python.svg\"} alt=\"python\" className=\"lang__icon\" />,\n    },\n    {\n      name: \"PostgreSQL\",\n      icon: (\n        <img\n          src={process.env.PUBLIC_URL + \"/icons/postgresql.svg\"}\n          alt=\"postgresql\"\n          className=\"lang__icon\"\n        />\n      ),\n    },\n    {\n      name: \"Django\",\n      icon: <img src={process.env.PUBLIC_URL + \"/icons/django.svg\"} alt=\"django\" className=\"lang__icon\" />,\n    },\n    {\n      name: \"Flask\",\n      icon: <img src={process.env.PUBLIC_URL + \"/icons/flask.svg\"} alt=\"flask\" className=\"lang__icon\" />,\n    },\n    {\n      name: \"GraphQl\",\n      icon: (\n        <img src={process.env.PUBLIC_URL + \"/icons/graphql.svg\"} alt=\"graphql\" className=\"lang__icon\" />\n      ),\n    },\n    {\n      name: \"Apollo\",\n      icon: <img src={process.env.PUBLIC_URL + \"/icons/apollo.svg\"} alt=\"apollo\" className=\"lang__icon\" />,\n    },\n    {\n      name: \"Redux\",\n      icon: <img src={process.env.PUBLIC_URL + \"/icons/redux.svg\"} alt=\"redux\" className=\"lang__icon\" />,\n    },\n    {\n      name: \"MaterialUI\",\n      icon: (\n        <img\n          src={process.env.PUBLIC_URL + \"/icons/materialui.svg\"}\n          alt=\"material ui\"\n          className=\"lang__icon\"\n        />\n      ),\n    },\n    {\n      name: \"Webpack\",\n      icon: (\n        <img src={process.env.PUBLIC_URL + \"/icons/webpack.svg\"} alt=\"webpack\" className=\"lang__icon\" />\n      ),\n    },\n    {\n      name: \"Amazon Web Services\",\n      icon: <img src={process.env.PUBLIC_URL + \"/icons/aws.svg\"} alt=\"aws\" className=\"lang__icon\" />,\n    },\n    {\n      name: \"Google Firebase\",\n      icon: (\n        <img src={process.env.PUBLIC_URL + \"/icons/firebase.svg\"} alt=\"firebase\" className=\"lang__icon\" />\n      ),\n    },\n  ],\n];\n\nexport default languagesData;\n","import React from \"react\";\nimport SpecialtyCard from \"../../components/SpecialtyCard/SpecialtyCard\";\nimport \"./About.css\";\nimport languagesData from \"../../data/LanguagesData\";\n\nconst About = () => {\n\n\tconst data = languagesData;\n\n\treturn (\n    <div className=\"about\" id=\"about\">\n      <h2 className=\"about__title\">About Me</h2>\n      <div className=\"about__container\">\n        <div className=\"about__text\">\n          <p>\n            Hi, I'm Suzy Nakayama and I graduated from General Assembly{\" \"}\n            <strong>Software Engineering Immersive</strong> program. I am a\n            full-stack developer that translates the geekiness behind ideas\n            bringing to life an aesthetically pleasing and fluid app for users.\n          </p>\n          <p>\n            My background in intellectual property law and culinary arts\n            enhanced my ability to articulate in a business context and to\n            provide creative solutions. This allows me to be an organized and\n            focused team player that collaborates for a positive environment\n            seeking challenges and opportunities to grow and improve, while also\n            developing and delivering.\n          </p>\n          <p>\n            I am currently learning Gatsby and React Native and looking forward\n            to growing my database of programming language/framework knowledge.\n          </p>\n          <h3 className=\"about__text--phrase\">\n            Learning is my hobby and creating is my passion.\n          </h3>\n        </div>\n        <div className=\"about__specialties--container\">\n          <div className=\"about__specialties--left\">\n            <h2 className=\"about__specialties--title-left\">Strong Skills</h2>\n            <SpecialtyCard data={data[0]} />\n          </div>\n          <div className=\"about__line\"></div>\n          <div className=\"about__specialties--right\">\n            <h2 className=\"about__specialties--title-right\">Working Skills</h2>\n            <SpecialtyCard data={data[1]} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default About;\n","const projectsData = [\n  {\n    name: \"The Ninja Board\",\n    image: process.env.PUBLIC_URL + \"/images/ninja.jpg\",\n    imageWebp: process.env.PUBLIC_URL + \"/images/ninja.webp\",\n    url:\n      \"https://roger-takeshita.github.io/Mintbean_Hackathons_JS_Bootcamp_Olympics/\",\n    git: \"https://github.com/suzynakayama/ninja-board\",\n    description:\n      \"Kanban Board created with Roger Takeshita as part of the Mintbean JavaScript Olympics Hackathon. We had less than 3 days to create a frontend only kanban board.\",\n    difficulties:\n      \"The two biggest difficulties were starting the typescript base from nothing and dealing with the React DnD library. It's not a difficult library, but there is not enough documentation about it. Because of these two difficulties we ended up taking more time than we wanted just to create the base functionality of the app. However, we did ended up finishing the app on time and we were very pleased with the overall and UI of the app.\",\n    technologies: \"ReactJs, Typescript, Sass, Redux, React DnD.\",\n  },\n  {\n    name: \"Code Mentoring\",\n    image: process.env.PUBLIC_URL + \"/images/cm.png\",\n    imageWebp: process.env.PUBLIC_URL + \"/images/cm.webp\",\n    url: \"https://codementoring.co/\",\n    git: \"https://github.com/code-mentoring/learn\",\n    description:\n      \"Code Mentoring is an international community that provides mentoring, coaching and a welcoming platform for developers of all levels to improve their skills. We are creating the “duolingo” (learning platform) for coding. Note: the project is on progress.\",\n    difficulties:\n      \"This is a great project where I am being able to improve, not only my technology knowledge, but also my leadership style. I am leading the frontend team throughout this project with month-long sprints and regular meetings to coordinate the project's features/bugs and how to prioritize them. Also working in collaboration with the project manager and designers to understand mock-ups and the flow of the entire site.\",\n    technologies:\n      \"NextJs, ReactJs, Typescript, GraphQL, Apollo, Styled Components, Lerna, StoryBook and Figma.\",\n  },\n  {\n    name: \"Yuki, the Chatbot!\",\n    image: process.env.PUBLIC_URL + \"/images/yuki.png\",\n    imageWebp: process.env.PUBLIC_URL + \"/images/yuki.webp\",\n    url: \"https://yuki-chatbot.herokuapp.com/\",\n    git: \"https://github.com/suzynakayama/chatbot\",\n    description:\n      \"Chatbot created using the Botkit starter that won 1st place at MintBean's Hackathon.\",\n    difficulties:\n      \"I created this when I participated in MintBean's Hackathon. Since this was my first time creating a bot, I had a hard time at the beginning trying to understand how does the library works and what/where should I code in order to make the bot work and answer.\",\n    technologies: \"Tech: Botkit, Node, CSS.\",\n  },\n  {\n    name: \"Footer NPM Package\",\n    image: process.env.PUBLIC_URL + \"/images/npm-logo.png\",\n    imageWebp: process.env.PUBLIC_URL + \"/images/npm-logo.webp\",\n    url: \"https://www.npmjs.com/package/react-myfooter\",\n    git: \"https://github.com/suzynakayama/myfooter-package\",\n    description:\n      \"React Component NPM Package with my footer, to be easier to use on my react projects.\",\n    difficulties:\n      \"I created this when I participated in MintBean's Hackathon. I couldn't finish on time because I had to learn how to deal with Webpack and Babel, but after the Hackathon was done, I kept reading the docs until I found a solution to my problems. My biggest challenge was making the CSS work on this file when compiling and publishing. I figure out that I needed to install the style-loader and css-loader modules and add them to my webpack config file.\",\n    technologies: \"Tech: CSS, React, Typescript, Webpack, and Babel.\",\n  },\n  {\n    name: \"The Path\",\n    image: process.env.PUBLIC_URL + \"/images/path.jpeg\",\n    imageWebp: process.env.PUBLIC_URL + \"/images/path.webp\",\n    url: \"https://the-path.herokuapp.com/\",\n    git: \"https://github.com/suzynakayama/the-path\",\n    description: `This is a MERN stack Single Page App (SPA) where the user can create his account, plan a trip, search for places to visit and create daily itineraries.\n      Email: test@test.com\n      Password: secretpassword`,\n    difficulties:\n      \"This was my final Bootcamp project. I had a week to develop this website and I think the hardest part for me was having to figure out how to have the user choose the places he wanted to go on each day and make the places appear on those days list. I ended up using an array of those places and whenever the checkbox was checked, I would add to the array and when the checkbox was unchecked I would remove from the array. Then, the user created an itinerary, this array would be added to it and then, the state is refresh and the checkboxes are unchecked\",\n    technologies:\n      \"React, React Hooks, Redux, Javascript, CSS, Bootstrap, Node.js, Express, MongoDb, Mongoose, 3rd party API's, and Heroku.\",\n  },\n  {\n    name: \"Jobbly\",\n    image: process.env.PUBLIC_URL + \"/images/jobbly.png\",\n    imageWebp: process.env.PUBLIC_URL + \"/images/jobbly.webp\",\n    url: \"https://jobbly-tracker.herokuapp.com/\",\n    git: \"https://github.com/suzynakayama/jobbly\",\n    description: `Responsive full-stack CRUD application that helps users to keep track of their job search maintaining a database of applications and contacts, adding interviews on their calendar and staying updated with the latest tech news.\n      Login: Test0\n      Password: secretpassword`,\n    difficulties:\n      \"This was my 3rd project on the Bootcamp, it was a group project and I think the hardest part for me was having to do all the frontend by myself, while also helping with the backend. We only had a week to finish and this was a big project with several small details to it, but we prevailed.\",\n    technologies:\n      \"HTML/Django Templates, CSS, Themestr, Python, API’s, Django, PostgreSQL, AWS S3, and Heroku.\",\n  },\n  {\n    name: \"Simon 2.0 World\",\n    image: process.env.PUBLIC_URL + \"/images/simon.png\",\n    imageWebp: process.env.PUBLIC_URL + \"/images/simon.webp\",\n    url: \"https://suzynakayama.github.io/simon/\",\n    git: \"https://github.com/suzynakayama/simon\",\n    description:\n      \"Static page game. My version of the electronic Simon game but with 8 colors instead of 4. Created with 2 modes: infinite and leveled, where the user can choose how many levels he wants to play. Made responsively to be playable at smartphones.\",\n    difficulties:\n      \"This was my first project during the Bootcamp and at that time I didn't know how asynchronous JavaScript worked. My biggest challenge with this project was making the computer turn function and figure out how to make the computer know when it's its time to play or wait for the player to play. With the help of my instructor I found out that one way to do it is to use setTimeout within another setTimeout.\",\n    technologies: \"HTML, CSS, JavaScript, and GitHub Pages.\",\n  },\n  {\n    name: \"Instagames\",\n    image: process.env.PUBLIC_URL + \"/images/instagames.png\",\n    imageWebp: process.env.PUBLIC_URL + \"/images/instagames.webp\",\n    url: \"https://myinstagames.herokuapp.com/\",\n    git: \"https://github.com/suzynakayama/instagames\",\n    description:\n      \"Responsive full-stack CRUD games platform, where developers can add their games, comment on other developers’ games, play, and read their code.\",\n    difficulties:\n      \"This was my 2nd Bootcamp project and definitely my favorite. My biggest challenge was to figure out how to implement the live search bar, so as you type it reloads live. I ended up creating a regex of input query and searching the games with that regex.\",\n    technologies:\n      \"HTML/EJS, CSS, Materialize, JavaScript, Node.Js, Express, AJAX, API’s, MongoDb, Mongoose, MongoDb Atlas, and Heroku.\",\n  },\n  {\n    name: \"Rock Paper Scissors Lizard Spock\",\n    image: process.env.PUBLIC_URL + \"/images/rpsls.png\",\n    imageWebp: process.env.PUBLIC_URL + \"/images/rpsls.webp\",\n    url: \"https://suzynakayama.github.io/RockPaperScissorsLizardSpock/\",\n    git: \"https://github.com/suzynakayama/RockPaperScissorsLizardSpock\",\n    description:\n      \"Static page game. Rock Paper Scissors Lizard Spock game from The Big Bang Theory Tv Show. \",\n    difficulties:\n      \"I created this game to practice what I have learned in class. It was really fun to create this game and I think the biggest challenge for me was to make the go button to disappear, the count to appear and then the count disappear and the winner appear. I ended up using setTimeout and a few variables that I would check what 'state' should I be showing at the moment\",\n    technologies: \"HTML, CSS, JavaScript, and GitHub Pages.\",\n  },\n  {\n    name: \"Tic-Tac-Toe\",\n    image: process.env.PUBLIC_URL + \"/images/tictactoe.png\",\n    imageWebp: process.env.PUBLIC_URL + \"/images/tictactoe.webp\",\n    url: \"https://suzynakayama.github.io/TicTacToe/\",\n    git: \"https://github.com/suzynakayama/TicTacToe\",\n    description:\n      \"Static page game. The old and always loved Tic-Tac-Toe game developed with a modern neon design.\",\n    difficulties:\n      \"I created this game to practice what I have learned in class. My greatest challenge was learning how to deal with box-shadow in CSS to make it neon like.\",\n    technologies: \"HTML, CSS, JavaScript, and GitHub Pages.\",\n  },\n];\n\nexport default projectsData;\n","import React from \"react\";\nimport \"./ProjectsCard.css\";\nimport projectsData from \"../../data/ProjectsData\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectsCard = ({ cannotUseWebp }) => {\n    let data = projectsData;\n\n    return (\n        <div className=\"project-card__container\">\n            {data.map((project, idx) => {\n                return (\n                    <Link to={`/${idx}`} key={idx}>\n                        <figure className=\"project-card__each\">\n                            <img\n                                className=\"project-card__img\"\n                                src={cannotUseWebp ? project.image : project.imageWebp}\n                                alt={project.name}\n                            />\n                            <figcaption className=\"project-card__figcaption\">\n                                <p className=\"project-card__name\">\n                                    {project.name}\n                                </p>\n                            </figcaption>\n                        </figure>\n                    </Link>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default ProjectsCard;\n","import React from \"react\";\nimport ProjectsCard from \"../../components/ProjectsCard/ProjectsCard\";\nimport \"./Projects.css\";\n\nconst Projects = ({ src, cannotUseWebp }) => (\n    <div\n    className=\"projects\"\n    id=\"projects\"\n    style={{ backgroundImage: `url(${src})` }}\n    >\n    <h2 className=\"projects__title\">My Projects</h2>\n        <ProjectsCard cannotUseWebp={ cannotUseWebp }/>\n    </div>\n);\n\nexport default Projects;\n","import React from 'react';\nimport \"./Panda.css\"\n\nexport const Panda = ({ isVisible }) => {\n  return (\n    <div className={ isVisible ? \"panda show\" : \"panda\" }>\n    <div className=\"face\">\n      <div className=\"ear left-ear\"></div>\n      <div className=\"ear right-ear\"></div>\n      <div className=\"eye left-eye\">\n        <div className=\"spark spark-left\">\n          <div className=\"dot\"></div>\n        </div>\n      </div>\n      <div className=\"eye right-eye\">\n        <div className=\"spark spark-right\">\n          <div className=\"dot\"></div>\n        </div>\n      </div>\n      <div className=\"nose\"></div>\n      <div className=\"mouth\"></div>\n    </div>\n    <div className=\"body\">\n      <div className=\"white\"></div>\n      <div className=\"arm left-arm\"></div>\n      <div className=\"arm right-arm\"></div>\n      <div className=\"leg left-leg\">\n        <div className=\"leg-dot-left\"></div>\n      </div>\n      <div className=\"leg right-leg\">\n        <div className=\"leg-dot-right\"></div>\n      </div>\n    </div>\n  </div>\n  )\n}\n","import React, { useState } from \"react\";\nimport emailjs from \"emailjs-com\";\nimport TrackVisibility from \"react-on-screen\";\nimport \"./Contact.css\";\nimport { Panda } from '../../components/Panda/Panda';\n\nconst Contact = () => {\n\tconst [message, setMessage] = useState({\n\t\tname: \"\",\n\t\temail: \"\",\n\t\tmsg: \"\",\n  });\n\n\tlet resetForm = () => {\n\t\tsetMessage({\n\t\t\tname: \"\",\n\t\t\temail: \"\",\n\t\t\tmsg: \"\",\n\t\t});\n\t};\n\n\tlet handleChange = (evt) => {\n\t\tsetMessage({\n\t\t\t...message,\n\t\t\t[evt.target.name]: [evt.target.value],\n\t\t});\n\t};\n\n\tlet handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tlet templateParams = {\n\t\t\tuser_name: message.name,\n\t\t\tuser_email: message.email,\n\t\t\tto_name: process.env.REACT_APP_EMAILJS_RECEIVER,\n\t\t\tmessage_html:\n\t\t\t\tmessage.msg + `   From: ${message.name}     Email: ${message.email}`,\n\t\t};\n\t\temailjs.send(\n\t\t\t\"gmail\",\n\t\t\tprocess.env.REACT_APP_EMAILJS_TEMPLATEID,\n\t\t\ttemplateParams,\n\t\t\tprocess.env.REACT_APP_EMAILJS_USERID\n\t\t);\n\t\tresetForm();\n\t};\n\n\treturn (\n    <div className=\"contact\" id=\"contact\">\n      <TrackVisibility>\n        <Panda className=\"panda\" />\n      </TrackVisibility>\n      <form className=\"contact__form\" onSubmit={handleSubmit}>\n        <h2 className=\"contact__form--title\">Let's chat!</h2>\n        <p className=\"contact__form--text\">\n          Fill out below and I'll do my best to get back to you as soon as I\n          can! &nbsp;&nbsp;&nbsp;\n          <i className=\"far fa-smile-wink\"></i>\n        </p>\n        <div className=\"contact__form--form\">\n          <label className=\"contact__label--name\" htmlFor=\"name\">\n            Name:\n          </label>\n          <input\n            className=\"contact__input--name\"\n            name=\"name\"\n            id=\"name\"\n            type=\"text\"\n            value={message.name}\n            onChange={handleChange}\n          ></input>\n          <label className=\"contact__label--email\" htmlFor=\"email\">\n            Email:\n          </label>\n          <input\n            className=\"contact__input--email\"\n            name=\"email\"\n            id=\"email\"\n            type=\"email\"\n            value={message.email}\n            onChange={handleChange}\n          ></input>\n          <label className=\"contact__label--msg\" htmlFor=\"msg\">\n            Message\n          </label>\n          <textarea\n            className=\"contact__input--msg\"\n            name=\"msg\"\n            id=\"msg\"\n            rows=\"10\"\n            cols=\"50\"\n            value={message.msg}\n            onChange={handleChange}\n          ></textarea>\n        </div>\n        <input\n          type=\"submit\"\n          className=\"contact__form--submit\"\n          value=\"Send\"\n          onSubmit={handleSubmit}\n        />\n      </form>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React, { useState, useMemo } from 'react';\nimport NavBar from '../../components/NavBar/NavBar';\nimport Intro from '../Intro/Intro';\nimport About from '../About/About';\nimport Projects from '../Projects/Projects';\nimport Contact from '../Contact/Contact';\nimport './Main.css';\nimport { checkBrowser } from '../utilities';\n\nconst Main = ({ nightMode, toggleNightMode }) => {\n  const [src, setSrc] = useState(process.env.PUBLIC_URL + '/images/pixcomp.jpg');\n  const { isChrome, isFirefox } = checkBrowser();\n\n  const cannotUseWebp = !isChrome && !isFirefox;\n\n  const myImg = cannotUseWebp\n    ? process.env.PUBLIC_URL + '/images/computer.png'\n    : process.env.PUBLIC_URL + '/images/computer.webp';\n\n  useMemo(() => {\n    const imageToLoad = new Image();\n    imageToLoad.src = myImg;\n    imageToLoad.onload = () => {\n      setSrc(myImg);\n    };\n  }, [myImg]);\n\n  return (\n    <div className='main'>\n      <NavBar theme={nightMode} toggleNightMode={toggleNightMode} />\n      <Intro src={src} cannotUseWebp={cannotUseWebp} />\n      <About />\n      <Projects src={src} cannotUseWebp={cannotUseWebp} />\n      <Contact />\n    </div>\n  );\n};\n\nexport default Main;\n","export const checkBrowser = () => {\n  const userAgent = navigator.userAgent;\n  const isChrome = userAgent.includes('Chrome') && !userAgent.includes('Edg');\n  const isFirefox = userAgent.includes('Firefox');\n  return { isChrome, isFirefox };\n};\n","import React, { useEffect } from 'react';\nimport ProjectsData from '../../data/ProjectsData';\nimport './OneProject.css';\nimport '../../components/NavBar/NavBar.css';\nimport { Link } from 'react-router-dom';\n\nconst OneProject = props => {\n  let data = ProjectsData;\n  let project = data[props.match.params.id];\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  });\n\n  return (\n    <>\n      <nav className='nav'>\n        <Link to='/' className='nav__link'>\n          {props.nightMode === false ? (\n            <img\n              src={process.env.PUBLIC_URL + '/images/Logo-black.png'}\n              alt='logo'\n              className='nav__logo'\n            />\n          ) : (\n            <img\n              src={process.env.PUBLIC_URL + '/images/Logo-white.png'}\n              alt='logo'\n              className='nav__logo'\n            />\n          )}\n        </Link>\n        <ul className='nav__list--special'>\n          <Link to='/' className='nav__link'>\n            <li className='nav__item'>Home</li>\n          </Link>\n        </ul>\n        <div className='nav__theme'>\n          {props.nightMode === false ? (\n            <i className='fas fa-moon' onClick={props.toggleNightMode}></i>\n          ) : (\n            <i className='fas fa-sun' onClick={props.toggleNightMode}></i>\n          )}\n        </div>\n      </nav>\n      {project ? (\n        <div className='project'>\n          <h2 className='project__name'>{project.name}</h2>\n          <img\n            className='project__img'\n            src={project.image}\n            alt={project.name}\n          />\n          <p className='project__description'>{project.description}</p>\n          <h3 className='project__challenges--title'>Challenges:</h3>\n          <p className='project__description'>{project.difficulties}</p>\n          <h3 className='project__tech--title'>Technologies:</h3>\n          <p className='project__tech'>{project.technologies}</p>\n          <a\n            className='project__url'\n            href={project.url}\n            target='_blank'\n            rel='noreferrer noopener'\n          >\n            Project LIVE\n          </a>\n          <a\n            className='project__code'\n            href={project.git}\n            target='_blank'\n            rel='noreferrer noopener'\n          >\n            Project CODE\n          </a>\n        </div>\n      ) : (\n        <div className='project__not-found'>\n          <p>Project not found</p>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default OneProject;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => (\n  <div className=\"footer\">\n    <p>\n      <span className=\"footer__span\">Developed by</span>\n      &nbsp;Suzy Nakayama&nbsp;\n    </p>\n    <ul className=\"social-list\">\n      <li className=\"social-list__item\">\n        <a\n          className=\"social-list__link\"\n          href=\"files/suzynakayama.pdf\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n          aria-label=\"resume\"\n        >\n          <i className=\"far fa-file-pdf\"></i>\n        </a>\n      </li>\n      <li className=\"social-list__item\">\n        <a\n          className=\"social-list__link\"\n          href=\"https://www.instagram.com/suzyyume/\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n          aria-label=\"instagram\"\n        >\n          <i className=\"fab fa-instagram\"></i>\n        </a>\n      </li>\n      <li className=\"social-list__item\">\n        <a\n          className=\"social-list__link\"\n          href=\"https://www.linkedin.com/in/suzy-nakayama/\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n          aria-label=\"linkedin\"\n        >\n          <i className=\"fab fa-linkedin\"></i>\n        </a>\n      </li>\n      <li className=\"social-list__item\">\n        <a\n          className=\"social-list__link\"\n          href=\"https://github.com/suzynakayama\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n          aria-label=\"github\"\n        >\n          <i className=\"fab fa-github\"></i>\n        </a>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default Footer;","import React, { useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Main from \"../Main/Main\";\nimport OneProject from \"../OneProject/OneProject\";\nimport Footer from \"../../components/Footer/Footer\";\nimport \"./App.css\";\n\nconst App = () => {\n    const [nightMode, setNightMode] = useState(false);\n\n    let toggleNightMode = () => {\n        let isOn = !nightMode;\n        setNightMode(isOn);\n    };\n\n    return (\n        <div className={\"App \" + (nightMode ? \"App--night-mode\" : \"\")}>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/\"\n                    render={() => (\n                        <Main\n                            nightMode={nightMode}\n                            toggleNightMode={toggleNightMode}\n                        />\n                    )}\n                />\n                <Route\n                    exact\n                    path=\"/:id\"\n                    render={props => (\n                        <OneProject\n                            {...props}\n                            nightMode={nightMode}\n                            toggleNightMode={toggleNightMode}\n                        />\n                    )}\n                />\n            </Switch>\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./pages/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <Router>\n        <Route component={App} />\n    </Router>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}